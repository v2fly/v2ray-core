syntax = "proto3";

package v2ray.core.transport.internet;
option csharp_namespace = "V2Ray.Core.Transport.Internet";
option go_package = "github.com/v2fly/v2ray-core/v5/transport/internet";
option java_package = "com.v2ray.core.transport.internet";
option java_multiple_files = true;

import "google/protobuf/any.proto";

enum TransportProtocol {
  TCP = 0;
  UDP = 1;
  MKCP = 2;
  WebSocket = 3;
  HTTP = 4;
  DomainSocket = 5;
}

message TransportConfig {
  // Type of network that this settings supports.
  // Deprecated. Use the string form below.
  TransportProtocol protocol = 1 [ deprecated = true ];

  // Type of network that this settings supports.
  string protocol_name = 3;

  // Specific settings. Must be of the transports.
  google.protobuf.Any settings = 2;
}

message StreamConfig {
  // Effective network. Deprecated. Use the string form below.
  TransportProtocol protocol = 1 [ deprecated = true ];

  // Effective network.
  string protocol_name = 5;

  repeated TransportConfig transport_settings = 2;

  // Type of security. Must be a message name of the settings proto.
  string security_type = 3;

  // Settings for transport security. For now the only choice is TLS.
  repeated google.protobuf.Any security_settings = 4;

  SocketConfig socket_settings = 6;
}

message ProxyConfig {
  string tag = 1;

  bool transportLayerProxy = 2;
}

// MPTCP is the state of MPTCP settings.
// Define it here to avoid conflict with TCPFastOpenState.
enum MPTCPState {
  // AsIs is to leave the current MPTCP state as is, unmodified.
  AsIs = 0;
  // Enable is for enabling MPTCP explictly.
  Enable = 1;
  // Disable is for disabling MPTCP explictly.
  Disable = 2;
}

// SocketConfig is options to be applied on network sockets.
message SocketConfig {
  // Mark of the connection. If non-zero, the value will be set to SO_MARK.
  uint32 mark = 1;

  enum TCPFastOpenState {
    // AsIs is to leave the current TFO state as is, unmodified.
    AsIs = 0;
    // Enable is for enabling TFO explictly.
    Enable = 1;
    // Disable is for disabling TFO explictly.
    Disable = 2;
  }

  // TFO is the state of TFO settings.
  TCPFastOpenState tfo = 2;

  enum TProxyMode {
    // TProxy is off.
    Off = 0;
    // TProxy mode.
    TProxy = 1;
    // Redirect mode.
    Redirect = 2;
  }

  // TProxy is for enabling TProxy socket option.
  TProxyMode tproxy = 3;

  // ReceiveOriginalDestAddress is for enabling IP_RECVORIGDSTADDR socket
  // option. This option is for UDP only.
  bool receive_original_dest_address = 4;

  bytes bind_address = 5;

  uint32 bind_port = 6;

  bool accept_proxy_protocol = 7;

  int32 tcp_keep_alive_interval = 8;

  uint32 tfo_queue_length = 9;

  int32 tcp_keep_alive_idle = 10;

  string bind_to_device = 11;

  int64 rx_buf_size = 12;
  int64 tx_buf_size = 13;
  bool force_buf_size = 14;


  MPTCPState mptcp = 15;
}
